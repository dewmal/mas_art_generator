# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import agent_pb2 as agent__pb2


class BroadcastStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateStream = channel.unary_stream(
                '/api.agent.Broadcast/CreateStream',
                request_serializer=agent__pb2.Connect.SerializeToString,
                response_deserializer=agent__pb2.Message.FromString,
                )
        self.SyncTime = channel.unary_stream(
                '/api.agent.Broadcast/SyncTime',
                request_serializer=agent__pb2.Connect.SerializeToString,
                response_deserializer=agent__pb2.TimeDelta.FromString,
                )
        self.BroadcastMessage = channel.unary_unary(
                '/api.agent.Broadcast/BroadcastMessage',
                request_serializer=agent__pb2.Message.SerializeToString,
                response_deserializer=agent__pb2.Close.FromString,
                )
        self.StartDynamicAgent = channel.unary_unary(
                '/api.agent.Broadcast/StartDynamicAgent',
                request_serializer=agent__pb2.DynamicAgent.SerializeToString,
                response_deserializer=agent__pb2.Close.FromString,
                )


class BroadcastServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BroadcastMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartDynamicAgent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BroadcastServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateStream': grpc.unary_stream_rpc_method_handler(
                    servicer.CreateStream,
                    request_deserializer=agent__pb2.Connect.FromString,
                    response_serializer=agent__pb2.Message.SerializeToString,
            ),
            'SyncTime': grpc.unary_stream_rpc_method_handler(
                    servicer.SyncTime,
                    request_deserializer=agent__pb2.Connect.FromString,
                    response_serializer=agent__pb2.TimeDelta.SerializeToString,
            ),
            'BroadcastMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.BroadcastMessage,
                    request_deserializer=agent__pb2.Message.FromString,
                    response_serializer=agent__pb2.Close.SerializeToString,
            ),
            'StartDynamicAgent': grpc.unary_unary_rpc_method_handler(
                    servicer.StartDynamicAgent,
                    request_deserializer=agent__pb2.DynamicAgent.FromString,
                    response_serializer=agent__pb2.Close.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.agent.Broadcast', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Broadcast(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.agent.Broadcast/CreateStream',
            agent__pb2.Connect.SerializeToString,
            agent__pb2.Message.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyncTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.agent.Broadcast/SyncTime',
            agent__pb2.Connect.SerializeToString,
            agent__pb2.TimeDelta.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BroadcastMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.agent.Broadcast/BroadcastMessage',
            agent__pb2.Message.SerializeToString,
            agent__pb2.Close.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartDynamicAgent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.agent.Broadcast/StartDynamicAgent',
            agent__pb2.DynamicAgent.SerializeToString,
            agent__pb2.Close.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
